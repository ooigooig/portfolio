<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://howardzhan2025.top/feed.xml" rel="self" type="application/atom+xml"/><link href="https://howardzhan2025.top/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-01-25T22:44:55+00:00</updated><id>https://howardzhan2025.top/feed.xml</id><title type="html">blank</title><subtitle>My name is Howard, nice to meet you. </subtitle><entry><title type="html">Gen AI:Chatbot with langchain, Vector database and openAI</title><link href="https://howardzhan2025.top/blog/2025/chat-pinecone/" rel="alternate" type="text/html" title="Gen AI:Chatbot with langchain, Vector database and openAI"/><published>2025-01-04T16:40:16+00:00</published><updated>2025-01-04T16:40:16+00:00</updated><id>https://howardzhan2025.top/blog/2025/chat-pinecone</id><content type="html" xml:base="https://howardzhan2025.top/blog/2025/chat-pinecone/"><![CDATA[<div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/pinecone-480.webp 480w,/assets/post/pinecone-800.webp 800w,/assets/post/pinecone-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/pinecone.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="pinecone" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/chatbot-pinecone.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div>]]></content><author><name></name></author><category term="SimpleGenAIproject"/><category term="GenerativeAI"/><summary type="html"><![CDATA[               ]]></summary></entry><entry><title type="html">Gen AI:Chatbot for SQL</title><link href="https://howardzhan2025.top/blog/2025/chatbot-sql/" rel="alternate" type="text/html" title="Gen AI:Chatbot for SQL"/><published>2025-01-04T16:40:16+00:00</published><updated>2025-01-04T16:40:16+00:00</updated><id>https://howardzhan2025.top/blog/2025/chatbot-sql</id><content type="html" xml:base="https://howardzhan2025.top/blog/2025/chatbot-sql/"><![CDATA[<div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/mysql-480.webp 480w,/assets/post/mysql-800.webp 800w,/assets/post/mysql-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/mysql.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="mysql" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> We try to connect Mysql in langchain. </div> <div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/langchain_sql-480.webp 480w,/assets/post/langchain_sql-800.webp 800w,/assets/post/langchain_sql-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/langchain_sql.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="langchain_sql" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> Setting up the connection </div> <div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/ask_sql-480.webp 480w,/assets/post/ask_sql-800.webp 800w,/assets/post/ask_sql-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/ask_sql.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="ask_sql" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> We can ask question now. </div> <div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/q1_sql-480.webp 480w,/assets/post/q1_sql-800.webp 800w,/assets/post/q1_sql-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/q1_sql.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="q1_sql" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> Qestion 1 </div> <div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/q2_sql-480.webp 480w,/assets/post/q2_sql-800.webp 800w,/assets/post/q2_sql-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/q2_sql.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="q2_sql" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> Qestion 2 </div> <div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/examination_q2-480.webp 480w,/assets/post/examination_q2-800.webp 800w,/assets/post/examination_q2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/examination_q2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="examination_q2" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> Examination of the answer 2 </div> <p>Code:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">streamlit</span> <span class="k">as</span> <span class="n">st</span>
<span class="kn">from</span> <span class="n">pathlib</span> <span class="kn">import</span> <span class="n">Path</span>
<span class="kn">from</span> <span class="n">langchain.agents</span> <span class="kn">import</span> <span class="n">create_sql_agent</span>
<span class="kn">from</span> <span class="n">langchain.sql_database</span> <span class="kn">import</span> <span class="n">SQLDatabase</span>
<span class="kn">from</span> <span class="n">langchain.agents.agent_types</span> <span class="kn">import</span> <span class="n">AgentType</span>
<span class="kn">from</span> <span class="n">langchain.callbacks</span> <span class="kn">import</span> <span class="n">StreamlitCallbackHandler</span>
<span class="kn">from</span> <span class="n">langchain.agents.agent_toolkits</span> <span class="kn">import</span> <span class="n">SQLDatabaseToolkit</span>
<span class="kn">from</span> <span class="n">sqlalchemy</span> <span class="kn">import</span> <span class="n">create_engine</span>
<span class="kn">import</span> <span class="n">sqlite3</span>
<span class="kn">from</span> <span class="n">langchain_groq</span> <span class="kn">import</span> <span class="n">ChatGroq</span>

<span class="n">st</span><span class="p">.</span><span class="nf">set_page_config</span><span class="p">(</span><span class="n">page_title</span><span class="o">=</span><span class="sh">"</span><span class="s">LangChain: Chat with SQL DB</span><span class="sh">"</span><span class="p">,</span> <span class="n">page_icon</span><span class="o">=</span><span class="sh">"</span><span class="s">🦜</span><span class="sh">"</span><span class="p">)</span>
<span class="n">st</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">"</span><span class="s">Chat with SQL DB</span><span class="sh">"</span><span class="p">)</span>

<span class="n">LOCALDB</span><span class="o">=</span><span class="sh">"</span><span class="s">USE_LOCALDB</span><span class="sh">"</span>
<span class="n">MYSQL</span><span class="o">=</span><span class="sh">"</span><span class="s">USE_MYSQL</span><span class="sh">"</span>

<span class="n">radio_opt</span><span class="o">=</span><span class="p">[</span><span class="sh">"</span><span class="s">Use SQLLite 3 Database- Student.db</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">Connect to you MySQL Database</span><span class="sh">"</span><span class="p">]</span>

<span class="n">selected_opt</span><span class="o">=</span><span class="n">st</span><span class="p">.</span><span class="n">sidebar</span><span class="p">.</span><span class="nf">radio</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="sh">"</span><span class="s">Choose the DB which you want to chat</span><span class="sh">"</span><span class="p">,</span><span class="n">options</span><span class="o">=</span><span class="n">radio_opt</span><span class="p">)</span>

<span class="k">if</span> <span class="n">radio_opt</span><span class="p">.</span><span class="nf">index</span><span class="p">(</span><span class="n">selected_opt</span><span class="p">)</span><span class="o">==</span><span class="mi">1</span><span class="p">:</span>
    <span class="n">db_uri</span><span class="o">=</span><span class="n">MYSQL</span>
    <span class="n">mysql_host</span><span class="o">=</span><span class="n">st</span><span class="p">.</span><span class="n">sidebar</span><span class="p">.</span><span class="nf">text_input</span><span class="p">(</span><span class="sh">"</span><span class="s">Provide MySQL Host</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">mysql_user</span><span class="o">=</span><span class="n">st</span><span class="p">.</span><span class="n">sidebar</span><span class="p">.</span><span class="nf">text_input</span><span class="p">(</span><span class="sh">"</span><span class="s">MYSQL User</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">mysql_password</span><span class="o">=</span><span class="n">st</span><span class="p">.</span><span class="n">sidebar</span><span class="p">.</span><span class="nf">text_input</span><span class="p">(</span><span class="sh">"</span><span class="s">MYSQL password</span><span class="sh">"</span><span class="p">,</span><span class="nb">type</span><span class="o">=</span><span class="sh">"</span><span class="s">password</span><span class="sh">"</span><span class="p">)</span>
    <span class="n">mysql_db</span><span class="o">=</span><span class="n">st</span><span class="p">.</span><span class="n">sidebar</span><span class="p">.</span><span class="nf">text_input</span><span class="p">(</span><span class="sh">"</span><span class="s">MySQL database</span><span class="sh">"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">db_uri</span><span class="o">=</span><span class="n">LOCALDB</span>

<span class="n">api_key</span><span class="o">=</span><span class="n">st</span><span class="p">.</span><span class="n">sidebar</span><span class="p">.</span><span class="nf">text_input</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="sh">"</span><span class="s">GRoq API Key</span><span class="sh">"</span><span class="p">,</span><span class="nb">type</span><span class="o">=</span><span class="sh">"</span><span class="s">password</span><span class="sh">"</span><span class="p">)</span>

<span class="k">if</span> <span class="ow">not</span> <span class="n">db_uri</span><span class="p">:</span>
    <span class="n">st</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">Please enter the database information and uri</span><span class="sh">"</span><span class="p">)</span>

<span class="k">if</span> <span class="ow">not</span> <span class="n">api_key</span><span class="p">:</span>
    <span class="n">st</span><span class="p">.</span><span class="nf">info</span><span class="p">(</span><span class="sh">"</span><span class="s">Please add the groq api key</span><span class="sh">"</span><span class="p">)</span>

<span class="c1">## LLM model
</span><span class="n">llm</span><span class="o">=</span><span class="nc">ChatGroq</span><span class="p">(</span><span class="n">groq_api_key</span><span class="o">=</span><span class="n">api_key</span><span class="p">,</span><span class="n">model_name</span><span class="o">=</span><span class="sh">"</span><span class="s">Llama3-8b-8192</span><span class="sh">"</span><span class="p">,</span><span class="n">streaming</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="nd">@st.cache_resource</span><span class="p">(</span><span class="n">ttl</span><span class="o">=</span><span class="sh">"</span><span class="s">2h</span><span class="sh">"</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">configure_db</span><span class="p">(</span><span class="n">db_uri</span><span class="p">,</span><span class="n">mysql_host</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">mysql_user</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">mysql_password</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span><span class="n">mysql_db</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">db_uri</span><span class="o">==</span><span class="n">LOCALDB</span><span class="p">:</span>
        <span class="n">dbfilepath</span><span class="o">=</span><span class="p">(</span><span class="nc">Path</span><span class="p">(</span><span class="n">__file__</span><span class="p">).</span><span class="n">parent</span><span class="o">/</span><span class="sh">"</span><span class="s">student.db</span><span class="sh">"</span><span class="p">).</span><span class="nf">absolute</span><span class="p">()</span>
        <span class="nf">print</span><span class="p">(</span><span class="n">dbfilepath</span><span class="p">)</span>
        <span class="n">creator</span> <span class="o">=</span> <span class="k">lambda</span><span class="p">:</span> <span class="n">sqlite3</span><span class="p">.</span><span class="nf">connect</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">file:</span><span class="si">{</span><span class="n">dbfilepath</span><span class="si">}</span><span class="s">?mode=ro</span><span class="sh">"</span><span class="p">,</span> <span class="n">uri</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
        <span class="k">return</span> <span class="nc">SQLDatabase</span><span class="p">(</span><span class="nf">create_engine</span><span class="p">(</span><span class="sh">"</span><span class="s">sqlite:///</span><span class="sh">"</span><span class="p">,</span> <span class="n">creator</span><span class="o">=</span><span class="n">creator</span><span class="p">))</span>
    <span class="k">elif</span> <span class="n">db_uri</span><span class="o">==</span><span class="n">MYSQL</span><span class="p">:</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="p">(</span><span class="n">mysql_host</span> <span class="ow">and</span> <span class="n">mysql_user</span> <span class="ow">and</span> <span class="n">mysql_password</span> <span class="ow">and</span> <span class="n">mysql_db</span><span class="p">):</span>
            <span class="n">st</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="sh">"</span><span class="s">Please provide all MySQL connection details.</span><span class="sh">"</span><span class="p">)</span>
            <span class="n">st</span><span class="p">.</span><span class="nf">stop</span><span class="p">()</span>
        <span class="k">return</span> <span class="nc">SQLDatabase</span><span class="p">(</span><span class="nf">create_engine</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">mysql+mysqlconnector://</span><span class="si">{</span><span class="n">mysql_user</span><span class="si">}</span><span class="s">:</span><span class="si">{</span><span class="n">mysql_password</span><span class="si">}</span><span class="s">@</span><span class="si">{</span><span class="n">mysql_host</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">mysql_db</span><span class="si">}</span><span class="sh">"</span><span class="p">))</span>   
    
<span class="k">if</span> <span class="n">db_uri</span><span class="o">==</span><span class="n">MYSQL</span><span class="p">:</span>
    <span class="n">db</span><span class="o">=</span><span class="nf">configure_db</span><span class="p">(</span><span class="n">db_uri</span><span class="p">,</span><span class="n">mysql_host</span><span class="p">,</span><span class="n">mysql_user</span><span class="p">,</span><span class="n">mysql_password</span><span class="p">,</span><span class="n">mysql_db</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">db</span><span class="o">=</span><span class="nf">configure_db</span><span class="p">(</span><span class="n">db_uri</span><span class="p">)</span>

<span class="c1">## toolkit
</span><span class="n">toolkit</span><span class="o">=</span><span class="nc">SQLDatabaseToolkit</span><span class="p">(</span><span class="n">db</span><span class="o">=</span><span class="n">db</span><span class="p">,</span><span class="n">llm</span><span class="o">=</span><span class="n">llm</span><span class="p">)</span>

<span class="n">agent</span><span class="o">=</span><span class="nf">create_sql_agent</span><span class="p">(</span>
    <span class="n">llm</span><span class="o">=</span><span class="n">llm</span><span class="p">,</span>
    <span class="n">toolkit</span><span class="o">=</span><span class="n">toolkit</span><span class="p">,</span>
    <span class="n">verbose</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="n">agent_type</span><span class="o">=</span><span class="n">AgentType</span><span class="p">.</span><span class="n">ZERO_SHOT_REACT_DESCRIPTION</span>
<span class="p">)</span>

<span class="k">if</span> <span class="sh">"</span><span class="s">messages</span><span class="sh">"</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">st</span><span class="p">.</span><span class="n">session_state</span> <span class="ow">or</span> <span class="n">st</span><span class="p">.</span><span class="n">sidebar</span><span class="p">.</span><span class="nf">button</span><span class="p">(</span><span class="sh">"</span><span class="s">Clear message history</span><span class="sh">"</span><span class="p">):</span>
    <span class="n">st</span><span class="p">.</span><span class="n">session_state</span><span class="p">[</span><span class="sh">"</span><span class="s">messages</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="p">[{</span><span class="sh">"</span><span class="s">role</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">assistant</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">How can I help you?</span><span class="sh">"</span><span class="p">}]</span>

<span class="k">for</span> <span class="n">msg</span> <span class="ow">in</span> <span class="n">st</span><span class="p">.</span><span class="n">session_state</span><span class="p">.</span><span class="n">messages</span><span class="p">:</span>
    <span class="n">st</span><span class="p">.</span><span class="nf">chat_message</span><span class="p">(</span><span class="n">msg</span><span class="p">[</span><span class="sh">"</span><span class="s">role</span><span class="sh">"</span><span class="p">]).</span><span class="nf">write</span><span class="p">(</span><span class="n">msg</span><span class="p">[</span><span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">])</span>

<span class="n">user_query</span><span class="o">=</span><span class="n">st</span><span class="p">.</span><span class="nf">chat_input</span><span class="p">(</span><span class="n">placeholder</span><span class="o">=</span><span class="sh">"</span><span class="s">Ask anything from the database</span><span class="sh">"</span><span class="p">)</span>

<span class="k">if</span> <span class="n">user_query</span><span class="p">:</span>
    <span class="n">st</span><span class="p">.</span><span class="n">session_state</span><span class="p">.</span><span class="n">messages</span><span class="p">.</span><span class="nf">append</span><span class="p">({</span><span class="sh">"</span><span class="s">role</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">user</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">:</span> <span class="n">user_query</span><span class="p">})</span>
    <span class="n">st</span><span class="p">.</span><span class="nf">chat_message</span><span class="p">(</span><span class="sh">"</span><span class="s">user</span><span class="sh">"</span><span class="p">).</span><span class="nf">write</span><span class="p">(</span><span class="n">user_query</span><span class="p">)</span>

    <span class="k">with</span> <span class="n">st</span><span class="p">.</span><span class="nf">chat_message</span><span class="p">(</span><span class="sh">"</span><span class="s">assistant</span><span class="sh">"</span><span class="p">):</span>
        <span class="n">streamlit_callback</span><span class="o">=</span><span class="nc">StreamlitCallbackHandler</span><span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="nf">container</span><span class="p">())</span>
        <span class="n">response</span><span class="o">=</span><span class="n">agent</span><span class="p">.</span><span class="nf">run</span><span class="p">(</span><span class="n">user_query</span><span class="p">,</span><span class="n">callbacks</span><span class="o">=</span><span class="p">[</span><span class="n">streamlit_callback</span><span class="p">])</span>
        <span class="n">st</span><span class="p">.</span><span class="n">session_state</span><span class="p">.</span><span class="n">messages</span><span class="p">.</span><span class="nf">append</span><span class="p">({</span><span class="sh">"</span><span class="s">role</span><span class="sh">"</span><span class="p">:</span><span class="sh">"</span><span class="s">assistant</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">content</span><span class="sh">"</span><span class="p">:</span><span class="n">response</span><span class="p">})</span>
        <span class="n">st</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>

        


</code></pre></div></div>]]></content><author><name></name></author><category term="SimpleGenAIproject"/><category term="GenerativeAI"/><summary type="html"><![CDATA[                We try to connect Mysql in langchain.]]></summary></entry><entry><title type="html">Gen AI:RAG Q&amp;amp;A Conversation With PDF Including Chat History</title><link href="https://howardzhan2025.top/blog/2025/rag-pdf/" rel="alternate" type="text/html" title="Gen AI:RAG Q&amp;amp;A Conversation With PDF Including Chat History"/><published>2025-01-03T16:40:16+00:00</published><updated>2025-01-03T16:40:16+00:00</updated><id>https://howardzhan2025.top/blog/2025/rag-pdf</id><content type="html" xml:base="https://howardzhan2025.top/blog/2025/rag-pdf/"><![CDATA[<div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/bert-480.webp 480w,/assets/post/bert-800.webp 800w,/assets/post/bert-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/bert.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="bert" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> Let's try to upload BERT thesis to analysis. </div> <div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/upload_bert-480.webp 480w,/assets/post/upload_bert-800.webp 800w,/assets/post/upload_bert-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/upload_bert.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="upload_bert" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> Filling the Groq api key and uploading the BERT thesis. </div> <div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/questions-480.webp 480w,/assets/post/questions-800.webp 800w,/assets/post/questions-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/questions.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="questions" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> Let's try to answer the assignment questions! </div> <div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/q1-480.webp 480w,/assets/post/q1-800.webp 800w,/assets/post/q1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/q1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="q1" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> The answer of the question 1. </div> <div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/q2-480.webp 480w,/assets/post/q2-800.webp 800w,/assets/post/q2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/q2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="q2" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> The answer of the question 2. </div> <div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/q3-480.webp 480w,/assets/post/q3-800.webp 800w,/assets/post/q3-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/q3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="q3" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> The answer of the question 3. </div> <div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/q4-480.webp 480w,/assets/post/q4-800.webp 800w,/assets/post/q4-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/q4.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="q4" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="caption"> The answer of the question 4. </div> <p>Code:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## RAG Q&amp;A Conversation With PDF Including Chat History
</span><span class="kn">import</span> <span class="n">streamlit</span> <span class="k">as</span> <span class="n">st</span>
<span class="kn">from</span> <span class="n">langchain.chains</span> <span class="kn">import</span> <span class="n">create_history_aware_retriever</span><span class="p">,</span> <span class="n">create_retrieval_chain</span>
<span class="kn">from</span> <span class="n">langchain.chains.combine_documents</span> <span class="kn">import</span> <span class="n">create_stuff_documents_chain</span>
<span class="kn">from</span> <span class="n">langchain_chroma</span> <span class="kn">import</span> <span class="n">Chroma</span>
<span class="kn">from</span> <span class="n">langchain_community.chat_message_histories</span> <span class="kn">import</span> <span class="n">ChatMessageHistory</span>
<span class="kn">from</span> <span class="n">langchain_core.chat_history</span> <span class="kn">import</span> <span class="n">BaseChatMessageHistory</span>
<span class="kn">from</span> <span class="n">langchain_core.prompts</span> <span class="kn">import</span> <span class="n">ChatPromptTemplate</span><span class="p">,</span> <span class="n">MessagesPlaceholder</span>
<span class="kn">from</span> <span class="n">langchain_groq</span> <span class="kn">import</span> <span class="n">ChatGroq</span>
<span class="kn">from</span> <span class="n">langchain_core.runnables.history</span> <span class="kn">import</span> <span class="n">RunnableWithMessageHistory</span>
<span class="kn">from</span> <span class="n">langchain_huggingface</span> <span class="kn">import</span> <span class="n">HuggingFaceEmbeddings</span>
<span class="kn">from</span> <span class="n">langchain_text_splitters</span> <span class="kn">import</span> <span class="n">RecursiveCharacterTextSplitter</span>
<span class="kn">from</span> <span class="n">langchain_community.document_loaders</span> <span class="kn">import</span> <span class="n">PyPDFLoader</span>
<span class="kn">import</span> <span class="n">os</span>

<span class="kn">from</span> <span class="n">dotenv</span> <span class="kn">import</span> <span class="n">load_dotenv</span>
<span class="nf">load_dotenv</span><span class="p">()</span>

<span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">[</span><span class="sh">'</span><span class="s">HF_TOKEN</span><span class="sh">'</span><span class="p">]</span><span class="o">=</span><span class="n">os</span><span class="p">.</span><span class="nf">getenv</span><span class="p">(</span><span class="sh">"</span><span class="s">HF_TOKEN</span><span class="sh">"</span><span class="p">)</span>
<span class="n">embeddings</span><span class="o">=</span><span class="nc">HuggingFaceEmbeddings</span><span class="p">(</span><span class="n">model_name</span><span class="o">=</span><span class="sh">"</span><span class="s">all-MiniLM-L6-v2</span><span class="sh">"</span><span class="p">)</span>


<span class="c1">## set up Streamlit 
</span><span class="n">st</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">"</span><span class="s">Conversational RAG With PDF uplaods and chat history</span><span class="sh">"</span><span class="p">)</span>
<span class="n">st</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="s">Upload Pdf</span><span class="sh">'</span><span class="s">s and chat with their content</span><span class="sh">"</span><span class="p">)</span>

<span class="c1">## Input the Groq API Key
</span><span class="n">api_key</span><span class="o">=</span><span class="n">st</span><span class="p">.</span><span class="nf">text_input</span><span class="p">(</span><span class="sh">"</span><span class="s">Enter your Groq API key:</span><span class="sh">"</span><span class="p">,</span><span class="nb">type</span><span class="o">=</span><span class="sh">"</span><span class="s">password</span><span class="sh">"</span><span class="p">)</span>

<span class="c1">## Check if groq api key is provided
</span><span class="k">if</span> <span class="n">api_key</span><span class="p">:</span>
    <span class="n">llm</span><span class="o">=</span><span class="nc">ChatGroq</span><span class="p">(</span><span class="n">groq_api_key</span><span class="o">=</span><span class="n">api_key</span><span class="p">,</span><span class="n">model_name</span><span class="o">=</span><span class="sh">"</span><span class="s">Gemma2-9b-It</span><span class="sh">"</span><span class="p">)</span>

    <span class="c1">## chat interface
</span>
    <span class="n">session_id</span><span class="o">=</span><span class="n">st</span><span class="p">.</span><span class="nf">text_input</span><span class="p">(</span><span class="sh">"</span><span class="s">Session ID</span><span class="sh">"</span><span class="p">,</span><span class="n">value</span><span class="o">=</span><span class="sh">"</span><span class="s">default_session</span><span class="sh">"</span><span class="p">)</span>
    <span class="c1">## statefully manage chat history
</span>
    <span class="k">if</span> <span class="sh">'</span><span class="s">store</span><span class="sh">'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">st</span><span class="p">.</span><span class="n">session_state</span><span class="p">:</span>
        <span class="n">st</span><span class="p">.</span><span class="n">session_state</span><span class="p">.</span><span class="n">store</span><span class="o">=</span><span class="p">{}</span>

    <span class="n">uploaded_files</span><span class="o">=</span><span class="n">st</span><span class="p">.</span><span class="nf">file_uploader</span><span class="p">(</span><span class="sh">"</span><span class="s">Choose A PDf file</span><span class="sh">"</span><span class="p">,</span><span class="nb">type</span><span class="o">=</span><span class="sh">"</span><span class="s">pdf</span><span class="sh">"</span><span class="p">,</span><span class="n">accept_multiple_files</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="c1">## Process uploaded  PDF's
</span>    <span class="k">if</span> <span class="n">uploaded_files</span><span class="p">:</span>
        <span class="n">documents</span><span class="o">=</span><span class="p">[]</span>
        <span class="k">for</span> <span class="n">uploaded_file</span> <span class="ow">in</span> <span class="n">uploaded_files</span><span class="p">:</span>
            <span class="n">temppdf</span><span class="o">=</span><span class="sa">f</span><span class="sh">"</span><span class="s">./temp.pdf</span><span class="sh">"</span>
            <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">temppdf</span><span class="p">,</span><span class="sh">"</span><span class="s">wb</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
                <span class="nb">file</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="n">uploaded_file</span><span class="p">.</span><span class="nf">getvalue</span><span class="p">())</span>
                <span class="n">file_name</span><span class="o">=</span><span class="n">uploaded_file</span><span class="p">.</span><span class="n">name</span>

            <span class="n">loader</span><span class="o">=</span><span class="nc">PyPDFLoader</span><span class="p">(</span><span class="n">temppdf</span><span class="p">)</span>
            <span class="n">docs</span><span class="o">=</span><span class="n">loader</span><span class="p">.</span><span class="nf">load</span><span class="p">()</span>
            <span class="n">documents</span><span class="p">.</span><span class="nf">extend</span><span class="p">(</span><span class="n">docs</span><span class="p">)</span>

    <span class="c1"># Split and create embeddings for the documents
</span>        <span class="n">text_splitter</span> <span class="o">=</span> <span class="nc">RecursiveCharacterTextSplitter</span><span class="p">(</span><span class="n">chunk_size</span><span class="o">=</span><span class="mi">5000</span><span class="p">,</span> <span class="n">chunk_overlap</span><span class="o">=</span><span class="mi">500</span><span class="p">)</span>
        <span class="n">splits</span> <span class="o">=</span> <span class="n">text_splitter</span><span class="p">.</span><span class="nf">split_documents</span><span class="p">(</span><span class="n">documents</span><span class="p">)</span>
        <span class="n">vectorstore</span> <span class="o">=</span> <span class="n">Chroma</span><span class="p">.</span><span class="nf">from_documents</span><span class="p">(</span><span class="n">documents</span><span class="o">=</span><span class="n">splits</span><span class="p">,</span> <span class="n">embedding</span><span class="o">=</span><span class="n">embeddings</span><span class="p">)</span>
        <span class="n">retriever</span> <span class="o">=</span> <span class="n">vectorstore</span><span class="p">.</span><span class="nf">as_retriever</span><span class="p">()</span>    

        <span class="n">contextualize_q_system_prompt</span><span class="o">=</span><span class="p">(</span>
            <span class="sh">"</span><span class="s">Given a chat history and the latest user question</span><span class="sh">"</span>
            <span class="sh">"</span><span class="s">which might reference context in the chat history, </span><span class="sh">"</span>
            <span class="sh">"</span><span class="s">formulate a standalone question which can be understood </span><span class="sh">"</span>
            <span class="sh">"</span><span class="s">without the chat history. Do NOT answer the question, </span><span class="sh">"</span>
            <span class="sh">"</span><span class="s">just reformulate it if needed and otherwise return it as is.</span><span class="sh">"</span>
        <span class="p">)</span>
        <span class="n">contextualize_q_prompt</span> <span class="o">=</span> <span class="n">ChatPromptTemplate</span><span class="p">.</span><span class="nf">from_messages</span><span class="p">(</span>
                <span class="p">[</span>
                    <span class="p">(</span><span class="sh">"</span><span class="s">system</span><span class="sh">"</span><span class="p">,</span> <span class="n">contextualize_q_system_prompt</span><span class="p">),</span>
                    <span class="nc">MessagesPlaceholder</span><span class="p">(</span><span class="sh">"</span><span class="s">chat_history</span><span class="sh">"</span><span class="p">),</span>
                    <span class="p">(</span><span class="sh">"</span><span class="s">human</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">{input}</span><span class="sh">"</span><span class="p">),</span>
                <span class="p">]</span>
            <span class="p">)</span>
        
        <span class="n">history_aware_retriever</span><span class="o">=</span><span class="nf">create_history_aware_retriever</span><span class="p">(</span><span class="n">llm</span><span class="p">,</span><span class="n">retriever</span><span class="p">,</span><span class="n">contextualize_q_prompt</span><span class="p">)</span>

        <span class="c1">## Answer question
</span>
        <span class="c1"># Answer question
</span>        <span class="n">system_prompt</span> <span class="o">=</span> <span class="p">(</span>
                <span class="sh">"</span><span class="s">You are an assistant for question-answering tasks. </span><span class="sh">"</span>
                <span class="sh">"</span><span class="s">Use the following pieces of retrieved context to answer </span><span class="sh">"</span>
                <span class="sh">"</span><span class="s">the question. If you don</span><span class="sh">'</span><span class="s">t know the answer, say that you </span><span class="sh">"</span>
                <span class="sh">"</span><span class="s">don</span><span class="sh">'</span><span class="s">t know. Use three sentences maximum and keep the </span><span class="sh">"</span>
                <span class="sh">"</span><span class="s">answer concise.</span><span class="sh">"</span>
                <span class="sh">"</span><span class="se">\n\n</span><span class="sh">"</span>
                <span class="sh">"</span><span class="s">{context}</span><span class="sh">"</span>
            <span class="p">)</span>
        <span class="n">qa_prompt</span> <span class="o">=</span> <span class="n">ChatPromptTemplate</span><span class="p">.</span><span class="nf">from_messages</span><span class="p">(</span>
                <span class="p">[</span>
                    <span class="p">(</span><span class="sh">"</span><span class="s">system</span><span class="sh">"</span><span class="p">,</span> <span class="n">system_prompt</span><span class="p">),</span>
                    <span class="nc">MessagesPlaceholder</span><span class="p">(</span><span class="sh">"</span><span class="s">chat_history</span><span class="sh">"</span><span class="p">),</span>
                    <span class="p">(</span><span class="sh">"</span><span class="s">human</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">{input}</span><span class="sh">"</span><span class="p">),</span>
                <span class="p">]</span>
            <span class="p">)</span>
        
        <span class="n">question_answer_chain</span><span class="o">=</span><span class="nf">create_stuff_documents_chain</span><span class="p">(</span><span class="n">llm</span><span class="p">,</span><span class="n">qa_prompt</span><span class="p">)</span>
        <span class="n">rag_chain</span><span class="o">=</span><span class="nf">create_retrieval_chain</span><span class="p">(</span><span class="n">history_aware_retriever</span><span class="p">,</span><span class="n">question_answer_chain</span><span class="p">)</span>

        <span class="k">def</span> <span class="nf">get_session_history</span><span class="p">(</span><span class="n">session</span><span class="p">:</span><span class="nb">str</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">BaseChatMessageHistory</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">session_id</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">st</span><span class="p">.</span><span class="n">session_state</span><span class="p">.</span><span class="n">store</span><span class="p">:</span>
                <span class="n">st</span><span class="p">.</span><span class="n">session_state</span><span class="p">.</span><span class="n">store</span><span class="p">[</span><span class="n">session_id</span><span class="p">]</span><span class="o">=</span><span class="nc">ChatMessageHistory</span><span class="p">()</span>
            <span class="k">return</span> <span class="n">st</span><span class="p">.</span><span class="n">session_state</span><span class="p">.</span><span class="n">store</span><span class="p">[</span><span class="n">session_id</span><span class="p">]</span>
        
        <span class="n">conversational_rag_chain</span><span class="o">=</span><span class="nc">RunnableWithMessageHistory</span><span class="p">(</span>
            <span class="n">rag_chain</span><span class="p">,</span><span class="n">get_session_history</span><span class="p">,</span>
            <span class="n">input_messages_key</span><span class="o">=</span><span class="sh">"</span><span class="s">input</span><span class="sh">"</span><span class="p">,</span>
            <span class="n">history_messages_key</span><span class="o">=</span><span class="sh">"</span><span class="s">chat_history</span><span class="sh">"</span><span class="p">,</span>
            <span class="n">output_messages_key</span><span class="o">=</span><span class="sh">"</span><span class="s">answer</span><span class="sh">"</span>
        <span class="p">)</span>

        <span class="n">user_input</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="nf">text_input</span><span class="p">(</span><span class="sh">"</span><span class="s">Your question:</span><span class="sh">"</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">user_input</span><span class="p">:</span>
            <span class="n">session_history</span><span class="o">=</span><span class="nf">get_session_history</span><span class="p">(</span><span class="n">session_id</span><span class="p">)</span>
            <span class="n">response</span> <span class="o">=</span> <span class="n">conversational_rag_chain</span><span class="p">.</span><span class="nf">invoke</span><span class="p">(</span>
                <span class="p">{</span><span class="sh">"</span><span class="s">input</span><span class="sh">"</span><span class="p">:</span> <span class="n">user_input</span><span class="p">},</span>
                <span class="n">config</span><span class="o">=</span><span class="p">{</span>
                    <span class="sh">"</span><span class="s">configurable</span><span class="sh">"</span><span class="p">:</span> <span class="p">{</span><span class="sh">"</span><span class="s">session_id</span><span class="sh">"</span><span class="p">:</span><span class="n">session_id</span><span class="p">}</span>
                <span class="p">},</span>  <span class="c1"># constructs a key "abc123" in `store`.
</span>            <span class="p">)</span>
            <span class="n">st</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="n">session_state</span><span class="p">.</span><span class="n">store</span><span class="p">)</span>
            <span class="n">st</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="s">Assistant:</span><span class="sh">"</span><span class="p">,</span> <span class="n">response</span><span class="p">[</span><span class="sh">'</span><span class="s">answer</span><span class="sh">'</span><span class="p">])</span>
            <span class="n">st</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="s">Chat History:</span><span class="sh">"</span><span class="p">,</span> <span class="n">session_history</span><span class="p">.</span><span class="n">messages</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">st</span><span class="p">.</span><span class="nf">warning</span><span class="p">(</span><span class="sh">"</span><span class="s">Please enter the GRoq API Key</span><span class="sh">"</span><span class="p">)</span>










</code></pre></div></div>]]></content><author><name></name></author><category term="SimpleGenAIproject"/><category term="GenerativeAI"/><summary type="html"><![CDATA[                Let's try to upload BERT thesis to analysis.]]></summary></entry><entry><title type="html">Gen AI:Use local ollama</title><link href="https://howardzhan2025.top/blog/2025/ga-ollama-local/" rel="alternate" type="text/html" title="Gen AI:Use local ollama"/><published>2025-01-02T16:40:16+00:00</published><updated>2025-01-02T16:40:16+00:00</updated><id>https://howardzhan2025.top/blog/2025/ga-ollama-local</id><content type="html" xml:base="https://howardzhan2025.top/blog/2025/ga-ollama-local/"><![CDATA[<div class="row justify-content-sm-center">     <div class="col-sm-8 mt-3 mt-md-0">         <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/post/ollama-480.webp 480w,/assets/post/ollama-800.webp 800w,/assets/post/ollama-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/post/ollama.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="ollama" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure>     </div> </div> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/use_local_ollama.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div>]]></content><author><name></name></author><category term="SimpleGenAIproject"/><category term="GenerativeAI"/><summary type="html"><![CDATA[               ]]></summary></entry><entry><title type="html">Gen AI:Summary my portfolio by OpenAI</title><link href="https://howardzhan2025.top/blog/2025/ga-summary-openai/" rel="alternate" type="text/html" title="Gen AI:Summary my portfolio by OpenAI"/><published>2025-01-01T16:40:16+00:00</published><updated>2025-01-01T16:40:16+00:00</updated><id>https://howardzhan2025.top/blog/2025/ga-summary-openai</id><content type="html" xml:base="https://howardzhan2025.top/blog/2025/ga-summary-openai/"><![CDATA[<div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/summary_my_portfolio.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div>]]></content><author><name></name></author><category term="SimpleGenAIproject"/><category term="GenerativeAI"/><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">AI ethics</title><link href="https://howardzhan2025.top/blog/2024/ai-ethics/" rel="alternate" type="text/html" title="AI ethics"/><published>2024-10-20T16:40:16+00:00</published><updated>2024-10-20T16:40:16+00:00</updated><id>https://howardzhan2025.top/blog/2024/ai-ethics</id><content type="html" xml:base="https://howardzhan2025.top/blog/2024/ai-ethics/"><![CDATA[<p><strong>1.Ethics VS. Law</strong></p> <p><strong>Ethics</strong> are the moral principles that govern a person or society’s behavior</p> <p><strong>Laws</strong> are systems of rules that govern a society’s conduct, often enforced by a controlling authority</p> <p>• Laws are often informed by ethics, <strong>but not all ethical behaviors are codified in the law</strong></p> <p>• The ethical effects of technology (like social media or AI) can take decades to understand, let alone translate to law</p> <p><strong>Unethical Behaviors Enforced by Law</strong>: Murder, Theft, Fraud, Reckless Driving</p> <p><strong>Unethical Behaviors NOT Enforced by Law</strong>: Lying, Being unfair to employees or children, Taking credit for others’ work, Eavesdropping or reading private messages.</p> <p>SCENARIO: <strong>the trolley problem</strong></p> <p><u>A runaway trolley speeds down a track. If it stays on course, 5 people on the track will be hit and killed.</u></p> <p>By pulling a lever, you can divert the trolley to another track where a single bystander will be hit.&lt;/u&gt;</p> <p>Do you pull the lever?</p> <p>• 90% of people say they would pull the lever, to save the most lives</p> <p>• But <strong>what if the one person was your spouse or best friend? What if it’s one child and five senior citizens?</strong></p> <p>SCENARIO:self-driven car</p> <p>A self-driving car is facing a head-on collision with a reckless driver. If it stays on course, it estimates that the passenger and 4 people in the other car will die. If it veers off course, it will hit one person on the sidewalk.</p> <p>How should the self-driving car be programmed to respond?</p> <p>• What type of algorithm would determine the “best” course of action?</p> <p>• Does the company that programmed the car decide how to solve this problem, or should there be laws</p> <p>that regulate how AI companies handle decisions like this?</p> <p><strong>2.Data Stewardship</strong></p> <p><strong>Data stewardship</strong> is the practice of managing and using data ethically</p> <p>• Stewardship ultimately comes down to the golden rule: <strong>treat user data how you’d like your own to be treated</strong></p> <p>• Ethical data stewardship requires a thoughtful approach to <strong>user consent, security, privacy and confidentiality</strong></p> <p><strong>3.Data &amp; Algorithmic bias</strong></p> <p><strong>•What is bias?</strong></p> <p><strong>Prejudice in favor of or against</strong> one thing, person, or group compared with another, usually in a way considered to be unfair.</p> <p><strong>•Types of bias</strong></p> <p>Sampling bias</p> <p>Selection bias</p> <p>Algorithmic bias</p> <p>Confirmation bias</p>]]></content><author><name></name></author><category term="note"/><category term="AI_Ethics"/><summary type="html"><![CDATA[1.Ethics VS. Law]]></summary></entry><entry><title type="html">MySQL Syntax</title><link href="https://howardzhan2025.top/blog/2024/mysql-note/" rel="alternate" type="text/html" title="MySQL Syntax"/><published>2024-09-25T16:40:16+00:00</published><updated>2024-09-25T16:40:16+00:00</updated><id>https://howardzhan2025.top/blog/2024/mysql-note</id><content type="html" xml:base="https://howardzhan2025.top/blog/2024/mysql-note/"><![CDATA[<p><strong>Trigger</strong></p> <p><strong><mark>CREATE TABLE W/ CODE</mark></strong></p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">USE</span> <span class="n">myfirstcodeschema</span><span class="p">;</span>

<span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">myfirstcodetable</span> <span class="p">(</span>
    <span class="n">myfirstcodetable_id</span> <span class="nb">BIGINT</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
    <span class="n">my_character_field</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">),</span>
    <span class="n">my_text_field</span> <span class="nb">TEXT</span><span class="p">,</span>
    <span class="n">my_created_at</span> <span class="nb">TIMESTAMP</span>
<span class="p">);</span>
</code></pre></div></div> <p><strong><mark>INSERTING NEW RECORDS</mark></strong></p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">USE</span> <span class="n">thriftshop</span><span class="p">;</span>

<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">inventory</span><span class="p">;</span>

<span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">inventory</span> <span class="p">(</span><span class="n">inventory_id</span><span class="p">,</span> <span class="n">item_name</span><span class="p">,</span> <span class="n">number_in_stock</span><span class="p">)</span> <span class="k">VALUES</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="s1">'wolf skin hat'</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</code></pre></div></div> <p>(Another) :</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">inventory</span> <span class="k">VALUES</span>
<span class="p">(</span><span class="mi">11</span><span class="p">,</span><span class="s1">'fur fox skin'</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span>
<span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="s1">'plaid button up shirt'</span><span class="p">,</span><span class="mi">8</span><span class="p">),</span>
<span class="p">(</span><span class="mi">13</span><span class="p">,</span><span class="s1">'flannel zebra jammies'</span><span class="p">,</span><span class="mi">6</span><span class="p">);</span>
</code></pre></div></div> <p><strong><mark>DELETE RECORDS</mark></strong></p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DELETE</span> <span class="k">FROM</span> <span class="n">inventory</span>
<span class="k">WHERE</span> <span class="n">inventory_id</span> <span class="o">=</span> <span class="mi">7</span>
</code></pre></div></div> <p><strong><mark>IMPORT DATA FROM A FILE</mark></strong></p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">SCHEMA</span> <span class="n">survey</span><span class="p">;</span>

<span class="n">USE</span> <span class="n">survey</span><span class="p">;</span>

<span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">salary_survey</span> <span class="p">(</span>
    <span class="n">country</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">),</span>
    <span class="n">years_experience</span> <span class="nb">INT</span><span class="p">,</span>
    <span class="n">employment_status</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">),</span>
    <span class="n">job_title</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">),</span>
    <span class="n">is_manager</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">),</span>
    <span class="n">education_level</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">),</span>
    <span class="p">);</span>
</code></pre></div></div> <p><strong><mark>ALTER TABLE W/ CODE</mark></strong></p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">customer_purchases</span><span class="p">;</span>

<span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">customer_purchases</span>
<span class="k">DROP</span> <span class="k">COLUMN</span> 


<span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">customer_purchases</span>
<span class="k">ADD</span> <span class="k">COLUMN</span> <span class="n">purchase_amount</span> <span class="nb">DECIMAL</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="k">AFTER</span> <span class="n">customer_purchase_id</span><span class="p">;</span>


<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">customer_purchases</span><span class="p">;</span>
</code></pre></div></div> <p><strong><mark>UPDATING RECORDS</mark></strong></p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">UPDATE</span> <span class="n">inventory</span>
<span class="k">SET</span> <span class="n">number_in_stock</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">WHERE</span> <span class="n">inventory_id</span> <span class="o">=</span> <span class="mi">9</span><span class="p">;</span>
</code></pre></div></div> <p>(Another) :</p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">UPDATE</span> <span class="n">inventory</span>
<span class="k">SET</span> <span class="n">number_in_stock</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">WHERE</span> <span class="n">inventory_id</span> <span class="k">IN</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">9</span><span class="p">);</span>
</code></pre></div></div> <p><strong><mark>TRIGGERS HELPFUL HINTS:</mark></strong></p> <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">TRIGGER</span> <span class="k">trigger_name</span>
<span class="o">&lt;</span><span class="k">BEFORE</span><span class="o">|</span><span class="k">AFTER</span><span class="o">&gt;&lt;</span><span class="k">INSERT</span><span class="o">|</span><span class="k">UPDATE</span><span class="o">|</span><span class="k">DELETE</span><span class="o">&gt;</span>
<span class="k">ON</span> <span class="k">table_name</span> <span class="k">FOR</span> <span class="k">EACH</span> <span class="k">ROW</span>
<span class="o">&lt;&lt;</span><span class="n">FOLLOW</span><span class="o">|</span><span class="n">PRECEDES</span><span class="o">&gt;</span> <span class="n">existing_trigger_name</span><span class="o">&gt;</span>
<span class="o">&lt;&lt;</span><span class="k">some</span> <span class="k">statement</span> <span class="n">we</span> <span class="n">want</span> <span class="k">to</span> <span class="k">execute</span> <span class="k">by</span> <span class="k">trigger</span><span class="o">&gt;&gt;</span>
<span class="o">&lt;</span><span class="k">WHERE</span> <span class="k">column_name</span> <span class="o">=&lt;</span><span class="k">OLD</span><span class="o">|</span><span class="k">NEW</span><span class="o">&gt;</span><span class="p">.</span><span class="k">column_name</span><span class="o">&gt;</span>
</code></pre></div></div> <hr/> <p><strong>EER diagrams and database tables</strong></p> <p>important concept regarding <strong>EER diagrams</strong> and <strong>their synchronization with database tables</strong></p> <p>I added two foreign keys to the customer purchases diagram, but when checking the actual table, the foreign keys were not added. The key takeaway is that updating the ETR diagram does not automatically synchronize changes with the tables in the schema. So we will be working directly in the tables and using reverse engineering to update the ETR diagram for an accurate snapshot, rather than expecting changes in the diagram to reflect in the database.</p>]]></content><author><name></name></author><category term="note"/><category term="MySQL"/><summary type="html"><![CDATA[Trigger]]></summary></entry><entry><title type="html">Neural Networks</title><link href="https://howardzhan2025.top/blog/2024/nn-note/" rel="alternate" type="text/html" title="Neural Networks"/><published>2024-08-23T16:40:16+00:00</published><updated>2024-08-23T16:40:16+00:00</updated><id>https://howardzhan2025.top/blog/2024/nn-note</id><content type="html" xml:base="https://howardzhan2025.top/blog/2024/nn-note/"><![CDATA[<p><strong>1.Is KL divergence same as cross entropy for image classification?</strong></p> <p><strong><mark><u>Yes</u></mark></strong></p> <p>In Image classification, we use one-hot encoding for our labels. Therefore, when y_i is the actual label, it equals 1 → log (1) = 0, and the whole term is cancelled. When y_i is not the correct label, it equals 0 and the whole term is also cancelled out.</p> <p>Therefore, KL divergence = Cross Entropy in image classification tasks</p> <p><strong>2.Why cross entropy comes in hand with Softmax layer?</strong></p> <p><strong><mark><u>Why we need to use softmax function after cross entropy?</u></mark></strong></p> <p>Because thecross entropy loss takes the <em>logatithm of the probability</em>. So in order to compute an efficient logarithm, we need to have <em>a probability distribution that sums up to 1</em>.</p> <p><strong>3.Contractive loss</strong></p> <ul> <li>Contrastive Loss is a distance-based Loss function (as opposed to <strong>prediction error-based</strong> losses like cross entropy) used to learn discriminative features for images.</li> <li>Like any distance-based loss, it tries to ensure that semantically similar examples are embedded close together. It is calculated on <strong>Pairs</strong></li> <li>This loss measures the <em><mark>similarity</mark></em> between two inputs.</li> <li>Each sample is composed of two images (<em><mark>positive pairs</mark></em> or <em><mark>negative pairs</mark></em>). Our goal is to maximize the distance between <em><mark>negative pairs</mark></em> and <u>minimize</u> the distance between <mark>*positive pairs*</mark>.</li> <li>We want small distance between the positive pairs (because they are similar images/inputs), and great distance than some margin m for negative pairs.</li> </ul>]]></content><author><name></name></author><category term="note"/><category term="neural_networks"/><summary type="html"><![CDATA[1.Is KL divergence same as cross entropy for image classification?]]></summary></entry><entry><title type="html">gitlab CI/CD</title><link href="https://howardzhan2025.top/blog/2024/gitlab-note/" rel="alternate" type="text/html" title="gitlab CI/CD"/><published>2024-07-01T16:40:16+00:00</published><updated>2024-07-01T16:40:16+00:00</updated><id>https://howardzhan2025.top/blog/2024/gitlab-note</id><content type="html" xml:base="https://howardzhan2025.top/blog/2024/gitlab-note/"><![CDATA[<p><strong>1.What is a pipeline?</strong></p> <p>A pipeline is a series of connected steps, similar to an assembly line in a car factory, where each step must be done in a specific order to build a final product. In a pipeline:</p> <ul> <li>Each step’s output becomes the next step’s input.</li> <li>Some steps, like adding wheels, can be done in parallel.</li> <li>Numerous steps are required, from initial assembly to final testing, to ensure quality before delivering to the customer.</li> </ul> <p><strong>2.GitLab’s architecture:</strong></p> <ul> <li>A <strong>GitLab Server</strong> provides the interface and stores repositories but delegates job execution to <strong>GitLab Runners</strong>.</li> <li>This separation allows GitLab to scale efficiently, as the server doesn’t run jobs directly.</li> <li>Runners, found under <strong>Settings &gt; CI/CD &gt; Runners</strong> in each project, execute pipeline jobs. GitLab.com offers <strong>Shared Runners</strong>, but users can also set up custom Runners on their infrastructure and assign them to specific projects for more tailored control.</li> </ul> <p><strong>3.Why GitLab/GitLab CI?</strong></p> <p>GitLab is a modern tool positioned to become a market leader. It offers:</p> <ul> <li>A scalable, modern architecture</li> <li>Easy integration with Docker</li> <li>Pipeline-as-code capabilities</li> <li>A partially open-source model</li> </ul> <p><strong>4.What is CI/CD?</strong></p> <ul> <li> <p><strong>CI (Continuous Integration)</strong>: A development practice where code changes are frequently integrated with the work of other developers. CI includes:</p> <ul> <li>Verifying builds and running unit tests</li> <li>Ensuring adherence to coding guidelines</li> <li>Integrating code multiple times per day</li> <li>Producing a deployable package</li> </ul> </li> <li> <p><strong>CD (Continuous Delivery)</strong>: Follows CI and focuses on testing the package created by CI to prepare it for production:</p> <ul> <li>Tests the installability and compatibility of the package in a production-like environment</li> <li>Requires manual approval before deploying to production</li> </ul> </li> <li> <p><strong>CD (Continuous Deployment)</strong>: Extends Continuous Delivery by automatically deploying every tested package to production without manual intervention, provided it passes all previous stages.</p> </li> </ul> <p><strong>5.Advantages of CI:</strong></p> <ul> <li>Detects errors early in development</li> <li>Reduces integration issues</li> <li>Enables faster development pace</li> </ul> <p><strong>6.Advantages of CD:</strong></p> <ul> <li>Ensures every change is ready for release</li> <li>Lowers deployment risk</li> <li>Speeds up value delivery with more frequent releases</li> </ul> <p><strong>7.What is Docker?</strong></p> <p>Docker is a virtualization tool that uses <strong>images</strong>—pre-configured software environments with all necessary dependencies.</p> <ul> <li><strong>Images</strong>: Files with instructions to package code, tools, and dependencies.</li> <li><strong>Containers</strong>: Executed images, functioning similarly to virtual machines but are lighter.</li> </ul> <p>In traditional CI servers, dependencies are installed directly on the server. However, <strong>GitLab CI</strong> utilizes Docker images for dependency management, allowing <strong>GitLab CI Runners</strong> to use specified images, simplifying and scaling the setup.</p> <p><strong>8.Why Do Jobs Fail?</strong></p> <p>Jobs fail due to command exit codes:</p> <ul> <li><strong>0</strong>: Command executed successfully</li> <li><strong>&gt;0</strong>: Command failed</li> </ul> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/gitlab/job_fail-480.webp 480w,/assets/img/gitlab/job_fail-800.webp 800w,/assets/img/gitlab/job_fail-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/gitlab/job_fail.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="job_fail" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><strong>9.Cache vs Artifacts</strong></p> <p>Though similar, <strong>caches</strong> and <strong>artifacts</strong> serve different purposes in CI/CD:</p> <ul> <li> <p><strong>Artifacts</strong>:</p> <ul> <li>Outputs from the build process (e.g., deployable packages).</li> <li>Can be partial outputs if built across stages.</li> <li>Used to pass data between jobs or stages.</li> </ul> </li> <li> <p><strong>Cache</strong>:</p> <ul> <li>Temporary storage for project dependencies.</li> <li>Not intended for storing artifacts, even if possible.</li> </ul> </li> </ul> <p>For more details, refer to <a href="https://docs.gitlab.com/ee/ci/caching/#cache-vs-artifacts">GitLab documentation</a>.</p>]]></content><author><name></name></author><category term="note"/><category term="CI/CD"/><summary type="html"><![CDATA[1.What is a pipeline?]]></summary></entry></feed>